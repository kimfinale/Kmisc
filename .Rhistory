daily_confirmed = round(dat$ode$daily_infected))
ncores <- detectCores()
cl <- makeCluster(getOption("cl.cores", ncores - 2))
doParallel::registerDoParallel(cl)
pf <- foreach(i = 1:1e3, .packages = c("pfilter"), .inorder = F) %dopar% {
extract_trace(params = theta,
y = y0,
data = d,
data_type = "infection",
npart = 1e4,
tend = nrow(d),
dt = 0.2,
error_pdf = "pois",
negbin_size = 15,
stoch = FALSE)
}
parallel::stopCluster(cl)
pr <- c(0.025, 0.25, 0.5, 0.75, 0.975)
Rt_est <- as.data.frame(sapply(pf, function(x) x[, "Rt"]))
Rt_quantile <- as.data.frame(t(apply(Rt_est, 1, function(x) quantile(x, pr))))
df <- cbind(Rt_quantile, d)
col_fill <- "#1F618D"
col_dat <- "grey70"
df$Rt <- dat$Rt
plt1 <- ggplot(df, aes(x = date)) +
geom_ribbon(aes(ymin = `2.5%`, ymax = `97.5%`), fill = col_fill, alpha = 0.5) +
geom_ribbon(aes(ymin = `25%`, ymax = `75%`), fill = col_fill, alpha = 0.8) +
geom_line(aes(y = `50%`), color = col_fill, size = 1.2) +
geom_line(aes(y = Rt), size = 1, linetype = "dashed") +
geom_hline(yintercept = 1, color = "darkred", size = 1, linetype = "dotted")+
labs(title = paste0("ID = ", id), y = expression(italic(R)[italic(t)]), x = "")
#
# labs(title = paste0("ID = ", id, ", Prob = 0.8"), y = expression(italic(R)[italic(t)]), x = "")
# labs(title = expression(italic(R)[italic(t)]~estimated~using~particle~filtering),
#        y = expression(italic(R)[italic(t)]), x = "")
# ggsave(paste0("plots/pf_stoch_confirmed_Rt_", id, ".png"), plt)
daily_conf <- as.data.frame(sapply(pf, function(x) x[, "CE"]))
daily_conf_quantile <-
as.data.frame(t(apply(daily_conf, 1, function(x) quantile(x, pr))))
df <- cbind(daily_conf_quantile, d)
df$ode_traj <- dat$ode$daily_confirmed
df$ode_traj <- dat$ode$daily_infected
plt2 <- ggplot(df, aes(x = date)) +
geom_col(aes(y = daily_confirmed), color = col_dat, width = 0.8) +
geom_ribbon(aes(ymin = `2.5%`, ymax = `97.5%`), fill = col_fill, alpha = 0.4) +
geom_ribbon(aes(ymin = `25%`, ymax = `75%`), fill = col_fill, alpha = 0.6) +
geom_line(aes(y = `50%`), color = col_fill, size = 1.2) +
geom_line(aes(y = ode_traj), size = 1, linetype = "dashed")+
labs(x = "", y = "Daily infected case")
# ggsave(paste0("plots/pf_stoch_confirmed_case_", id, ".png"), plt)
plts <- gridExtra::grid.arrange(plt1, plt2, nrow = 2)
ggsave(paste0("plots/pf_ode_infect_", id, ".png"), plts)
}
## forward filtering with backward sampling
# d <- out[1:175, c("time", "daily_confirmed")]
# names(d) <- c("date", "daily_confirmed")
# dat <- readRDS("outputs/Rt_dataset_20210831T120235.rds")
# dat <- readRDS("outputs/Rt_dataset_20210831T142547.rds")
# dat <- readRDS("outputs/Rt_dataset_20210831T150053.rds")
dat <- readRDS("outputs/Rt_dataset_20210831T155155.rds")
library(Kmisc)
library(pfilter)
# devtools::install()
theta["betavol"] <- 0.28
library(ggplot2)
theme_set(theme_bw())
library(parallel)
library(doParallel)
library(foreach)
set.seed(2)
for(id in 1:1){
d <- data.frame(date = dat$time,
daily_confirmed = round(dat$ode$daily_infected))
ncores <- detectCores()
cl <- makeCluster(getOption("cl.cores", ncores - 2))
doParallel::registerDoParallel(cl)
pf <- foreach(i = 1:1e3, .packages = c("pfilter"), .inorder = F) %dopar% {
extract_trace(params = theta,
y = y0,
data = d,
data_type = "infection",
npart = 1e4,
tend = nrow(d),
dt = 0.1,
error_pdf = "pois",
negbin_size = 15,
stoch = FALSE)
}
parallel::stopCluster(cl)
pr <- c(0.025, 0.25, 0.5, 0.75, 0.975)
Rt_est <- as.data.frame(sapply(pf, function(x) x[, "Rt"]))
Rt_quantile <- as.data.frame(t(apply(Rt_est, 1, function(x) quantile(x, pr))))
df <- cbind(Rt_quantile, d)
col_fill <- "#1F618D"
col_dat <- "grey70"
df$Rt <- dat$Rt
plt1 <- ggplot(df, aes(x = date)) +
geom_ribbon(aes(ymin = `2.5%`, ymax = `97.5%`), fill = col_fill, alpha = 0.5) +
geom_ribbon(aes(ymin = `25%`, ymax = `75%`), fill = col_fill, alpha = 0.8) +
geom_line(aes(y = `50%`), color = col_fill, size = 1.2) +
geom_line(aes(y = Rt), size = 1, linetype = "dashed") +
geom_hline(yintercept = 1, color = "darkred", size = 1, linetype = "dotted")+
labs(title = paste0("ID = ", id), y = expression(italic(R)[italic(t)]), x = "")
#
# labs(title = paste0("ID = ", id, ", Prob = 0.8"), y = expression(italic(R)[italic(t)]), x = "")
# labs(title = expression(italic(R)[italic(t)]~estimated~using~particle~filtering),
#        y = expression(italic(R)[italic(t)]), x = "")
# ggsave(paste0("plots/pf_stoch_confirmed_Rt_", id, ".png"), plt)
daily_conf <- as.data.frame(sapply(pf, function(x) x[, "CE"]))
daily_conf_quantile <-
as.data.frame(t(apply(daily_conf, 1, function(x) quantile(x, pr))))
df <- cbind(daily_conf_quantile, d)
df$ode_traj <- dat$ode$daily_confirmed
df$ode_traj <- dat$ode$daily_infected
plt2 <- ggplot(df, aes(x = date)) +
geom_col(aes(y = daily_confirmed), color = col_dat, width = 0.8) +
geom_ribbon(aes(ymin = `2.5%`, ymax = `97.5%`), fill = col_fill, alpha = 0.4) +
geom_ribbon(aes(ymin = `25%`, ymax = `75%`), fill = col_fill, alpha = 0.6) +
geom_line(aes(y = `50%`), color = col_fill, size = 1.2) +
geom_line(aes(y = ode_traj), size = 1, linetype = "dashed")+
labs(x = "", y = "Daily infected case")
# ggsave(paste0("plots/pf_stoch_confirmed_case_", id, ".png"), plt)
plts <- gridExtra::grid.arrange(plt1, plt2, nrow = 2)
ggsave(paste0("plots/pf_ode_infect_", id, ".png"), plts)
}
## forward filtering with backward sampling
# d <- out[1:175, c("time", "daily_confirmed")]
# names(d) <- c("date", "daily_confirmed")
# dat <- readRDS("outputs/Rt_dataset_20210831T120235.rds")
# dat <- readRDS("outputs/Rt_dataset_20210831T142547.rds")
# dat <- readRDS("outputs/Rt_dataset_20210831T150053.rds")
dat <- readRDS("outputs/Rt_dataset_20210831T155155.rds")
library(Kmisc)
library(pfilter)
# devtools::install()
theta["betavol"] <- 0.28
library(ggplot2)
theme_set(theme_bw())
library(parallel)
library(doParallel)
library(foreach)
set.seed(2)
for(id in 1:1){
d <- data.frame(date = dat$time,
daily_infected = round(dat$ode$daily_infected))
ncores <- detectCores()
cl <- makeCluster(getOption("cl.cores", ncores - 2))
doParallel::registerDoParallel(cl)
pf <- foreach(i = 1:1e3, .packages = c("pfilter"), .inorder = F) %dopar% {
extract_trace(params = theta,
y = y0,
data = d,
data_type = "infection",
npart = 1e4,
tend = nrow(d),
dt = 0.2,
error_pdf = "pois",
negbin_size = 15,
stoch = FALSE)
}
parallel::stopCluster(cl)
pr <- c(0.025, 0.25, 0.5, 0.75, 0.975)
Rt_est <- as.data.frame(sapply(pf, function(x) x[, "Rt"]))
Rt_quantile <- as.data.frame(t(apply(Rt_est, 1, function(x) quantile(x, pr))))
df <- cbind(Rt_quantile, d)
col_fill <- "#1F618D"
col_dat <- "grey70"
df$Rt <- dat$Rt
plt1 <- ggplot(df, aes(x = date)) +
geom_ribbon(aes(ymin = `2.5%`, ymax = `97.5%`), fill = col_fill, alpha = 0.5) +
geom_ribbon(aes(ymin = `25%`, ymax = `75%`), fill = col_fill, alpha = 0.8) +
geom_line(aes(y = `50%`), color = col_fill, size = 1.2) +
geom_line(aes(y = Rt), size = 1, linetype = "dashed") +
geom_hline(yintercept = 1, color = "darkred", size = 1, linetype = "dotted")+
labs(title = paste0("ID = ", id), y = expression(italic(R)[italic(t)]), x = "")
#
# labs(title = paste0("ID = ", id, ", Prob = 0.8"), y = expression(italic(R)[italic(t)]), x = "")
# labs(title = expression(italic(R)[italic(t)]~estimated~using~particle~filtering),
#        y = expression(italic(R)[italic(t)]), x = "")
# ggsave(paste0("plots/pf_stoch_confirmed_Rt_", id, ".png"), plt)
daily_conf <- as.data.frame(sapply(pf, function(x) x[, "CE"]))
daily_conf_quantile <-
as.data.frame(t(apply(daily_conf, 1, function(x) quantile(x, pr))))
df <- cbind(daily_conf_quantile, d)
df$ode_traj <- dat$ode$daily_confirmed
df$ode_traj <- dat$ode$daily_infected
plt2 <- ggplot(df, aes(x = date)) +
geom_col(aes(y = daily_confirmed), color = col_dat, width = 0.8) +
geom_ribbon(aes(ymin = `2.5%`, ymax = `97.5%`), fill = col_fill, alpha = 0.4) +
geom_ribbon(aes(ymin = `25%`, ymax = `75%`), fill = col_fill, alpha = 0.6) +
geom_line(aes(y = `50%`), color = col_fill, size = 1.2) +
geom_line(aes(y = ode_traj), size = 1, linetype = "dashed")+
labs(x = "", y = "Daily infected case")
# ggsave(paste0("plots/pf_stoch_confirmed_case_", id, ".png"), plt)
plts <- gridExtra::grid.arrange(plt1, plt2, nrow = 2)
ggsave(paste0("plots/pf_ode_infect_", id, ".png"), plts)
}
df
plt1
df <- cbind(Rt_quantile, d)
col_fill <- "#1F618D"
col_dat <- "grey70"
df$Rt <- dat$Rt
plt1 <- ggplot(df, aes(x = date)) +
geom_ribbon(aes(ymin = `2.5%`, ymax = `97.5%`), fill = col_fill, alpha = 0.5) +
geom_ribbon(aes(ymin = `25%`, ymax = `75%`), fill = col_fill, alpha = 0.8) +
geom_line(aes(y = `50%`), color = col_fill, size = 1.2) +
geom_line(aes(y = Rt), size = 1, linetype = "dashed") +
geom_hline(yintercept = 1, color = "darkred", size = 1, linetype = "dotted")+
labs(title = paste0("ID = ", id), y = expression(italic(R)[italic(t)]), x = "")
#
# labs(title = paste0("ID = ", id, ", Prob = 0.8"), y = expression(italic(R)[italic(t)]), x = "")
# labs(title = expression(italic(R)[italic(t)]~estimated~using~particle~filtering),
#        y = expression(italic(R)[italic(t)]), x = "")
# ggsave(paste0("plots/pf_stoch_confirmed_Rt_", id, ".png"), plt)
daily_conf <- as.data.frame(sapply(pf, function(x) x[, "CE"]))
daily_conf_quantile <-
as.data.frame(t(apply(daily_conf, 1, function(x) quantile(x, pr))))
df <- cbind(daily_conf_quantile, d)
df$ode_traj <- dat$ode$daily_confirmed
df$ode_traj <- dat$ode$daily_infected
plt2 <- ggplot(df, aes(x = date)) +
geom_col(aes(y = daily_infected), color = col_dat, width = 0.8) +
geom_ribbon(aes(ymin = `2.5%`, ymax = `97.5%`), fill = col_fill, alpha = 0.4) +
geom_ribbon(aes(ymin = `25%`, ymax = `75%`), fill = col_fill, alpha = 0.6) +
geom_line(aes(y = `50%`), color = col_fill, size = 1.2) +
geom_line(aes(y = ode_traj), size = 1, linetype = "dashed")+
labs(x = "", y = "Daily infected case")
# ggsave(paste0("plots/pf_stoch_confirmed_case_", id, ".png"), plt)
plts <- gridExtra::grid.arrange(plt1, plt2, nrow = 2)
ggsave(paste0("plots/pf_ode_infect_", id, ".png"), plts)
## forward filtering with backward sampling
# d <- out[1:175, c("time", "daily_confirmed")]
# names(d) <- c("date", "daily_confirmed")
# dat <- readRDS("outputs/Rt_dataset_20210831T120235.rds")
# dat <- readRDS("outputs/Rt_dataset_20210831T142547.rds")
# dat <- readRDS("outputs/Rt_dataset_20210831T150053.rds")
dat <- readRDS("outputs/Rt_dataset_20210831T155155.rds")
library(Kmisc)
library(pfilter)
# devtools::install()
theta["betavol"] <- 0.28
library(ggplot2)
theme_set(theme_bw())
library(parallel)
library(doParallel)
library(foreach)
set.seed(2)
for(id in 10:10){
d <- data.frame(date = dat$time,
daily_infected = round(dat$stoch_perfect_obs$confirmed[, id]))
ncores <- detectCores()
cl <- makeCluster(getOption("cl.cores", ncores - 2))
doParallel::registerDoParallel(cl)
pf <- foreach(i = 1:1e3, .packages = c("pfilter"), .inorder = F) %dopar% {
extract_trace(params = theta,
y = y0,
data = d,
data_type = "confirmation",
npart = 1e4,
tend = nrow(d),
dt = 0.2,
error_pdf = "pois",
negbin_size = 15,
stoch = TRUE)
}
parallel::stopCluster(cl)
pr <- c(0.025, 0.25, 0.5, 0.75, 0.975)
Rt_est <- as.data.frame(sapply(pf, function(x) x[, "Rt"]))
Rt_quantile <- as.data.frame(t(apply(Rt_est, 1, function(x) quantile(x, pr))))
df <- cbind(Rt_quantile, d)
col_fill <- "#1F618D"
col_dat <- "grey70"
df$Rt <- dat$Rt
plt1 <- ggplot(df, aes(x = date)) +
geom_ribbon(aes(ymin = `2.5%`, ymax = `97.5%`), fill = col_fill, alpha = 0.5) +
geom_ribbon(aes(ymin = `25%`, ymax = `75%`), fill = col_fill, alpha = 0.8) +
geom_line(aes(y = `50%`), color = col_fill, size = 1.2) +
geom_line(aes(y = Rt), size = 1, linetype = "dashed") +
geom_hline(yintercept = 1, color = "darkred", size = 1, linetype = "dotted")+
labs(title = paste0("ID = ", id), y = expression(italic(R)[italic(t)]), x = "")
#
# labs(title = paste0("ID = ", id, ", Prob = 0.8"), y = expression(italic(R)[italic(t)]), x = "")
# labs(title = expression(italic(R)[italic(t)]~estimated~using~particle~filtering),
#        y = expression(italic(R)[italic(t)]), x = "")
# ggsave(paste0("plots/pf_stoch_confirmed_Rt_", id, ".png"), plt)
daily_conf <- as.data.frame(sapply(pf, function(x) x[, "CR"]))
daily_conf_quantile <-
as.data.frame(t(apply(daily_conf, 1, function(x) quantile(x, pr))))
df <- cbind(daily_conf_quantile, d)
df$ode_traj <- dat$ode$daily_confirmed
# df$ode_traj <- dat$ode$daily_infected
plt2 <- ggplot(df, aes(x = date)) +
geom_col(aes(y = daily_confirmed), color = col_dat, width = 0.8) +
geom_ribbon(aes(ymin = `2.5%`, ymax = `97.5%`), fill = col_fill, alpha = 0.4) +
geom_ribbon(aes(ymin = `25%`, ymax = `75%`), fill = col_fill, alpha = 0.6) +
geom_line(aes(y = `50%`), color = col_fill, size = 1.2) +
geom_line(aes(y = ode_traj), size = 1, linetype = "dashed")+
labs(x = "", y = "Daily confirmed case")
# ggsave(paste0("plots/pf_stoch_confirmed_case_", id, ".png"), plt)
plts <- gridExtra::grid.arrange(plt1, plt2, nrow = 2)
ggsave(paste0("plots/pf_ode_infect_", id, ".png"), plts)
}
## forward filtering with backward sampling
# d <- out[1:175, c("time", "daily_confirmed")]
# names(d) <- c("date", "daily_confirmed")
# dat <- readRDS("outputs/Rt_dataset_20210831T120235.rds")
# dat <- readRDS("outputs/Rt_dataset_20210831T142547.rds")
# dat <- readRDS("outputs/Rt_dataset_20210831T150053.rds")
dat <- readRDS("outputs/Rt_dataset_20210831T155155.rds")
library(Kmisc)
library(pfilter)
# devtools::install()
theta["betavol"] <- 0.28
library(ggplot2)
theme_set(theme_bw())
library(parallel)
library(doParallel)
library(foreach)
set.seed(2)
for(id in 10:10){
d <- data.frame(date = dat$time,
daily_infected = round(dat$stoch_perfect_obs$confirmed[, id]))
ncores <- detectCores()
cl <- makeCluster(getOption("cl.cores", ncores - 2))
doParallel::registerDoParallel(cl)
pf <- foreach(i = 1:1e3, .packages = c("pfilter"), .inorder = F) %dopar% {
extract_trace(params = theta,
y = y0,
data = d,
data_type = "confirmation",
npart = 1e4,
tend = nrow(d),
dt = 0.2,
error_pdf = "pois",
negbin_size = 15,
stoch = TRUE)
}
parallel::stopCluster(cl)
pr <- c(0.025, 0.25, 0.5, 0.75, 0.975)
Rt_est <- as.data.frame(sapply(pf, function(x) x[, "Rt"]))
Rt_quantile <- as.data.frame(t(apply(Rt_est, 1, function(x) quantile(x, pr))))
df <- cbind(Rt_quantile, d)
col_fill <- "#1F618D"
col_dat <- "grey70"
df$Rt <- dat$Rt
plt1 <- ggplot(df, aes(x = date)) +
geom_ribbon(aes(ymin = `2.5%`, ymax = `97.5%`), fill = col_fill, alpha = 0.5) +
geom_ribbon(aes(ymin = `25%`, ymax = `75%`), fill = col_fill, alpha = 0.8) +
geom_line(aes(y = `50%`), color = col_fill, size = 1.2) +
geom_line(aes(y = Rt), size = 1, linetype = "dashed") +
geom_hline(yintercept = 1, color = "darkred", size = 1, linetype = "dotted")+
labs(title = paste0("ID = ", id), y = expression(italic(R)[italic(t)]), x = "")
#
# labs(title = paste0("ID = ", id, ", Prob = 0.8"), y = expression(italic(R)[italic(t)]), x = "")
# labs(title = expression(italic(R)[italic(t)]~estimated~using~particle~filtering),
#        y = expression(italic(R)[italic(t)]), x = "")
# ggsave(paste0("plots/pf_stoch_confirmed_Rt_", id, ".png"), plt)
daily_conf <- as.data.frame(sapply(pf, function(x) x[, "CR"]))
daily_conf_quantile <-
as.data.frame(t(apply(daily_conf, 1, function(x) quantile(x, pr))))
df <- cbind(daily_conf_quantile, d)
df$ode_traj <- dat$ode$daily_confirmed
# df$ode_traj <- dat$ode$daily_infected
plt2 <- ggplot(df, aes(x = date)) +
geom_col(aes(y = daily_confirmed), color = col_dat, width = 0.8) +
geom_ribbon(aes(ymin = `2.5%`, ymax = `97.5%`), fill = col_fill, alpha = 0.4) +
geom_ribbon(aes(ymin = `25%`, ymax = `75%`), fill = col_fill, alpha = 0.6) +
geom_line(aes(y = `50%`), color = col_fill, size = 1.2) +
geom_line(aes(y = ode_traj), size = 1, linetype = "dashed")+
labs(x = "", y = "Daily confirmed case")
# ggsave(paste0("plots/pf_stoch_confirmed_case_", id, ".png"), plt)
plts <- gridExtra::grid.arrange(plt1, plt2, nrow = 2)
ggsave(paste0("plots/proc_stoch_pf_stoch__", id, ".png"), plts)
}
# dat <- readRDS("outputs/Rt_dataset_20210831T120235.rds")
# dat <- readRDS("outputs/Rt_dataset_20210831T142547.rds")
# dat <- readRDS("outputs/Rt_dataset_20210831T150053.rds")
dat <- readRDS("outputs/Rt_dataset_20210831T155155.rds")
knitr::opts_chunk$set(echo = TRUE)
d <- data.frame(t=dat$time, Rt = dat$Rt)
d <- data.frame(t=dat$time, Rt = dat$Rt,
ode_inf = dat$ode$daily_infected,
ode_conf = dat$ode$daily_confirmed)
library(ggplot2)
theme_set(theme_bw())
A <- ggplot(d, aes(time, Rt))+
geom_line()
A
A <- ggplot(d, aes(t, Rt))+
geom_line()
A
B <- ggplot(d, aes(x = t))+
geom_line(aes(y = ode_inf), color = "red")+
geom_line(aes(y = ode_conf), color = "blue")+
gA <- ggplotGrob(A)
B <- ggplot(d, aes(x = t))+
geom_line(aes(y = ode_inf), color = "red")+
geom_line(aes(y = ode_conf), color = "blue")+
gA <- ggplotGrob(A)
B <- ggplot(d, aes(x = t))+
geom_line(aes(y = ode_inf), color = "red")+
geom_line(aes(y = ode_conf), color = "blue")
gA <- ggplotGrob(A)
gB <- ggplotGrob(B)
grid::grid.newpage()
grid::grid.draw(rbind(gA, gB))
str(dat$stoch_perfect_obs$confirmed)
names(dat$stoch_perfect_obs$confirmed)
stoch <- at$stoch_perfect_obs$confirmed
stoch <- dat$stoch_perfect_obs$confirmed
stoch$t <- dat$time
library(dplyr)
library(tidyr)
stoch <- pivot_longer(stoch, cols = -t, names_to = "run", values_to = "val")
head(stoch)
B <- ggplot(d, aes(x = t))+
geom_line(aes(y = ode_inf), color = "red")+
geom_line(aes(y = ode_conf), color = "blue")+
geom_line(data=stoch, aes(t, val, group = run), color = "grey90")
B
B <- ggplot(stoch, aes(x = t))+
geom_line(aes(t, val, group = run), color = "grey90")+
geom_line(data = d, aes(x = t, y = ode_inf), color = "darkred")+
geom_line(data = d, aes(x = t, y = ode_conf), color = "steelblue")
B
library(ggplot2)
theme_set(theme_bw())
A <- ggplot(d, aes(t, Rt))+
geom_line()+
labs(y = expression(italic(R)[italic(t)]), x = "")
B <- ggplot(stoch, aes(x = t))+
geom_line(aes(t, val, group = run), color = "grey90")+
geom_line(data = d, aes(x = t, y = ode_inf), color = "darkred")+
geom_line(data = d, aes(x = t, y = ode_conf), color = "steelblue")+
labs(x = "time", y = "Number of cases")
gA <- ggplotGrob(A)
gB <- ggplotGrob(B)
grid::grid.newpage()
grid::grid.draw(rbind(gA, gB))
plts <- grid::grid.draw(rbind(gA, gB))
stoch <- dat$stoch_perfect_obs$confirmed[,1:10]
stoch$t <- dat$time
stoch <- pivot_longer(stoch, cols = -t, names_to = "run", values_to = "val")
B <- ggplot(stoch, aes(x = t))+
geom_line(aes(t, val, group = run), color = "grey90")+
geom_line(data = d, aes(x = t, y = ode_inf), color = "darkred")+
geom_line(data = d, aes(x = t, y = ode_conf), color = "steelblue")+
labs(x = "Time", y = "Number of cases")
gA <- ggplotGrob(A)
gB <- ggplotGrob(B)
grid::grid.newpage()
plts <- grid::grid.draw(rbind(gA, gB))
plts
plts <- grid::grid.draw(rbind(gA, gB))
plots
plts
ggsave(paste0("plots/rt_case.png"), plts)
grid::grid.draw(rbind(gA, gB))
ggsave(paste0("plots/rt_case.png"))
gA <- ggplotGrob(A)
gB <- ggplotGrob(B)
grid::grid.newpage()
grid::grid.draw(rbind(gA, gB))
ggsave(paste0("plots/rt_case.png"))
?grid.draw
library(grid)
plts <- grid.draw(rbind(gA, gB))
plts
gA <- ggplotGrob(A)
gB <- ggplotGrob(B)
library(grid)
plts <- grid.draw(rbind(gA, gB))
plts
ggsave("ab.pdf", plot = plts)
png("plots/rt_case.png")
grid::grid.newpage()
grid::grid.draw(rbind(gA, gB))
dev.off()
?png
png("plots/rt_case.png", width = 480, height = 480)
grid::grid.newpage()
grid::grid.draw(rbind(gA, gB))
dev.off()
dev.off()
png("plots/rt_case.png", width = 480, height = 480)
grid::grid.newpage()
grid::grid.draw(rbind(gA, gB))
dev.off()
png("plots/rt_case.png", width = 480*2, height = 480*2)
grid::grid.newpage()
grid::grid.draw(rbind(gA, gB))
dev.off()
png("plots/rt_case.png", width = 480*1.2, height = 480*1.2)
grid::grid.newpage()
grid::grid.draw(rbind(gA, gB))
dev.off()
png("plots/rt_case.png", width = 480*1.2, height = 480*1.2, res = 2*72)
grid::grid.newpage()
grid::grid.draw(rbind(gA, gB))
dev.off()
B <- ggplot(stoch, aes(x = t))+
geom_line(aes(t, val, group = run), color = "grey80")+
geom_line(data = d, aes(x = t, y = ode_inf), color = "darkred")+
geom_line(data = d, aes(x = t, y = ode_conf), color = "steelblue")+
labs(x = "Time", y = "Number of cases")
gA <- ggplotGrob(A)
gB <- ggplotGrob(B)
png("plots/rt_case.png", width = 480*1.2, height = 480*1.2, res = 2*72)
grid::grid.newpage()
grid::grid.draw(rbind(gA, gB))
dev.off()
